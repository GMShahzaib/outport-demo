"use strict";
// Validate if string is JSON
const isValidJson = (str) => {
    try {
        JSON.parse(str);
        return true;
    }
    catch {
        return false;
    }
};
const showErrorOnBody = (endpointId) => {
    document.getElementById(`${endpointId}_json_input_body`).classList.add("body-input-error");
};
const removeErrorOnBody = (endpointId) => {
    document.getElementById(`${endpointId}_json_input_body`).classList.remove("body-input-error");
};
// Show selected tab content
const showTab = (endpointId, wrapper, tabName) => {
    const wrapperEle = document.getElementById(`${endpointId}_${wrapper}_tabs`);
    const content = document.getElementById(`${endpointId}_${wrapper}_content`);
    toggleActiveTab(wrapperEle, content, `${endpointId}_${tabName}`);
};
const toggleActiveTab = (wrapperEle, content, activeTabId) => {
    Array.from(wrapperEle.children).forEach(child => child.classList.remove('active'));
    Array.from(content.children).forEach(child => child.classList.remove('active'));
    document.getElementById(`${activeTabId}_tab`)?.classList.add('active');
    document.getElementById(`${activeTabId}_content`)?.classList.add('active');
};
// Toggle content visibility
const toggleContent = (id) => {
    const content = document.getElementById(id);
    content.style.display = content.style.display === 'block' ? 'none' : 'block';
};
// Setup typing timer for JSON formatting
let typingTimer;
const doneTypingInterval = 2500;
const setupFormateJsonInterval = (id) => {
    const ele = document.getElementById(id);
    clearTimeout(typingTimer);
    if (ele.value)
        typingTimer = window.setTimeout(() => formatJson(ele), doneTypingInterval);
};
// Format JSON
const formatJson = (ele) => {
    if (isValidJson(ele.value)) {
        ele.value = JSON.stringify(JSON.parse(ele.value), null, 2);
    }
};
// Show toast message
const showToast = (message) => {
    updateToast(message, true);
    setTimeout(hideToast, 3000); // Hide toast after 3 seconds
};
// Hide toast message
const hideToast = () => {
    updateToast("", false);
};
const updateToast = (message, show) => {
    const toast = document.getElementById('toast');
    const toastText = document.getElementById('toast-text');
    toastText.innerHTML = message;
    toast.classList.toggle('show-toast', show);
};
// Update UI with response
const updateUIWithResponse = (endpointId, time, status, headers, data) => {
    const div = document.createElement('div');
    div.textContent = data;
    updateElement(`${endpointId}_statusCode`, String(status));
    updateElement(`${endpointId}_resp_time`, time);
    updateTable(`${endpointId}_response_headers`, headers);
    updateElement(`${endpointId}_respBody`, div.innerHTML);
    document.getElementById(`${endpointId}_response`)?.classList.remove("displayNon");
};
const updateElement = (id, content) => {
    document.getElementById(id).innerHTML = content;
};
const updateTable = (id, headers) => {
    if (!headers)
        return;
    const rows = Object.keys(headers).map(key => `
        <tr class="data-row">
          <td class="data-cell whiteBorder"><span name="key"  class="response-header-key">${key}</span></td>
          <td class="data-cell whiteBorder"><span name="value" class="response-header-value">${headers[key]}</span></td>
        </tr>
    `).join('');
    updateElement(id, rows);
};
function convertFormBodyToJson(formData, formElement) {
    const obj = {};
    formData.forEach((value, key) => {
        const inputElement = formElement.querySelector(`[name="${key}"]`);
        const type = inputElement ? inputElement.type : "unknown";
        obj[key] = { type };
        if (typeof value == "string") {
            obj[key].value = value;
        }
    });
    return JSON.stringify(obj);
}
function isValidHttpUrl(value) {
    let url;
    try {
        url = new URL(value);
    }
    catch (_) {
        return false;
    }
    return url.protocol === "http:" || url.protocol === "https:";
}
function hideElement(id) {
    document.getElementById(id).classList.add("displayNon");
}
function showElement(id) {
    document.getElementById(id).classList.remove("displayNon");
}
