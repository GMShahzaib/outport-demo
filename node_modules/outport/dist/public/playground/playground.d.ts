declare const bodyTypeSelectElement: HTMLSelectElement;
declare const jsonDiv: HTMLDivElement;
declare const formDiv: HTMLDivElement;
declare const jsonBodyInput: HTMLTextAreaElement;
declare const formBodyData: HTMLFormElement;
declare const parametersTable: HTMLTableElement;
declare const headersTable: HTMLTableElement;
declare const responseHeadersTable: HTMLTableElement;
declare const urlInput: HTMLInputElement;
declare const methodSelect: HTMLSelectElement;
declare function loadUrl(url?: string): void;
declare function loadMethod(method?: string): void;
declare function loadHeaders(headers?: string): void;
declare function loadBodyType(bodyType?: string): void;
declare function loadBody(bodyType?: string, body?: string): void;
declare function updateFormValueKey(keyInput: HTMLInputElement): void;
declare function toggleRequestBodyType(): void;
declare function changeBodyFormInputType(selectElement: HTMLSelectElement): void;
declare function addRowWithQueryParamListeners(): void;
declare function addRow(tableId: string, key?: string, value?: string): void;
declare function addReqBodyRow(key?: string, valueType?: string, value?: string): void;
declare function deleteRow(element: HTMLElement): void;
declare function sendRequest(): Promise<void>;
declare function getBody(): string | FormData | undefined;
declare function getHeaders(): {
    [key: string]: string;
};
declare function initializeRealTimeURLUpdate(): void;
declare function initializeInputListeners(parametersTable: HTMLTableElement): void;
declare function updateURL(): void;
declare function syncTableWithURL(): void;
declare const copyRequest: () => Promise<void>;
declare const copyResponse: () => Promise<void>;
declare function getResponseHeaders(): {
    [key: string]: string;
}[];
